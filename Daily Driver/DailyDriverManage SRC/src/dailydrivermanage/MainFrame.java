/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dailydrivermanage;

import java.awt.Color;
import java.awt.Font;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aadarsh
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ContainerPanel = new javax.swing.JPanel();
        LabelsContainerPanel = new javax.swing.JPanel();
        lbl_Time = new javax.swing.JLabel();
        lbl_pickUpPoint = new javax.swing.JLabel();
        lbl_Destination = new javax.swing.JLabel();
        lbl_DriverId = new javax.swing.JLabel();
        lbl_PassengerName = new javax.swing.JLabel();
        lbl_Amount = new javax.swing.JLabel();
        lbl_OptTip = new javax.swing.JLabel();
        lbl_Account = new javax.swing.JLabel();
        lbl_Phone = new javax.swing.JLabel();
        InputFieldsPanel = new javax.swing.JPanel();
        Date date = new Date(); //creating a new date variable
        SpinnerDateModel sm =  new SpinnerDateModel(date, null, null, Calendar.HOUR_OF_DAY); //setting hour of day
        jSpinner1 = new javax.swing.JSpinner(sm);
        PickupTXT = new javax.swing.JTextField();
        DestinationTXT = new javax.swing.JTextField();
        DriversIDTXT = new javax.swing.JTextField();
        PassengerTXT = new javax.swing.JTextField();
        AmountTXT = new javax.swing.JTextField();
        OptionalTipTXT = new javax.swing.JTextField();
        AccountTXT = new javax.swing.JTextField();
        TelephoneTXT = new javax.swing.JTextField();
        panel1 = new java.awt.Panel();
        Cancel_BTN = new javax.swing.JButton();
        load_BTN = new javax.swing.JButton();
        Insert_BTN = new javax.swing.JButton();
        Save_BTN = new javax.swing.JButton();
        ExportBTN = new javax.swing.JButton();
        panel2 = new java.awt.Panel();
        jScrollPane1 = new javax.swing.JScrollPane();
        MainTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        totalamountTXT = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        TotalJobsTXT = new javax.swing.JLabel();
        TotalExpectedText = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        SecondTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ContainerPanel.setBackground(new java.awt.Color(255, 255, 255));
        ContainerPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ContainerPanel.setName("ContainerPanel"); // NOI18N

        LabelsContainerPanel.setBackground(new java.awt.Color(255, 0, 51));
        LabelsContainerPanel.setAlignmentY(0.0F);
        LabelsContainerPanel.setName("PanelTitles"); // NOI18N
        LabelsContainerPanel.setLayout(new java.awt.GridLayout(1, 0));

        lbl_Time.setForeground(new java.awt.Color(255, 255, 255));
        lbl_Time.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_Time.setText("Time");
        lbl_Time.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lbl_Time.setPreferredSize(new java.awt.Dimension(85, 24));
        LabelsContainerPanel.add(lbl_Time);

        lbl_pickUpPoint.setForeground(new java.awt.Color(255, 255, 255));
        lbl_pickUpPoint.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_pickUpPoint.setText("Pick Up Point");
        lbl_pickUpPoint.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lbl_pickUpPoint.setPreferredSize(new java.awt.Dimension(85, 24));
        LabelsContainerPanel.add(lbl_pickUpPoint);

        lbl_Destination.setForeground(new java.awt.Color(255, 255, 255));
        lbl_Destination.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_Destination.setText("Destination");
        lbl_Destination.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lbl_Destination.setPreferredSize(new java.awt.Dimension(85, 24));
        LabelsContainerPanel.add(lbl_Destination);

        lbl_DriverId.setForeground(new java.awt.Color(255, 255, 255));
        lbl_DriverId.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_DriverId.setText("Driver's ID");
        lbl_DriverId.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lbl_DriverId.setPreferredSize(new java.awt.Dimension(85, 24));
        LabelsContainerPanel.add(lbl_DriverId);

        lbl_PassengerName.setForeground(new java.awt.Color(255, 255, 255));
        lbl_PassengerName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_PassengerName.setText("Passenger Name");
        lbl_PassengerName.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lbl_PassengerName.setPreferredSize(new java.awt.Dimension(85, 24));
        LabelsContainerPanel.add(lbl_PassengerName);

        lbl_Amount.setForeground(new java.awt.Color(255, 255, 255));
        lbl_Amount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_Amount.setText("Amount");
        lbl_Amount.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lbl_Amount.setPreferredSize(new java.awt.Dimension(85, 24));
        LabelsContainerPanel.add(lbl_Amount);

        lbl_OptTip.setForeground(new java.awt.Color(255, 255, 255));
        lbl_OptTip.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_OptTip.setText("Optional Tip");
        lbl_OptTip.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lbl_OptTip.setPreferredSize(new java.awt.Dimension(85, 24));
        LabelsContainerPanel.add(lbl_OptTip);

        lbl_Account.setForeground(new java.awt.Color(255, 255, 255));
        lbl_Account.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_Account.setText("Account");
        lbl_Account.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lbl_Account.setPreferredSize(new java.awt.Dimension(85, 24));
        LabelsContainerPanel.add(lbl_Account);

        lbl_Phone.setForeground(new java.awt.Color(255, 255, 255));
        lbl_Phone.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_Phone.setText("Telephone");
        lbl_Phone.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lbl_Phone.setPreferredSize(new java.awt.Dimension(85, 24));
        LabelsContainerPanel.add(lbl_Phone);

        InputFieldsPanel.setBackground(new java.awt.Color(51, 255, 255));
        InputFieldsPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 255)));
        InputFieldsPanel.setAlignmentX(0.0F);
        InputFieldsPanel.setLayout(new java.awt.GridLayout(1, 0, 1, 0));

        JSpinner.DateEditor de = new JSpinner.DateEditor(jSpinner1, "HH:mm");	// using DateEditor to set the time format
        jSpinner1.setEditor(de);	//Setting the final DateEditor to default editor.
        jSpinner1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jSpinner1.setMinimumSize(null);
        jSpinner1.setPreferredSize(null);
        InputFieldsPanel.add(jSpinner1);

        PickupTXT.setMinimumSize(null);
        PickupTXT.setPreferredSize(null);
        InputFieldsPanel.add(PickupTXT);

        DestinationTXT.setMinimumSize(null);
        DestinationTXT.setPreferredSize(null);
        InputFieldsPanel.add(DestinationTXT);

        DriversIDTXT.setMinimumSize(null);
        DriversIDTXT.setPreferredSize(null);
        DriversIDTXT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                DriversIDTXTKeyTyped(evt);
            }
        });
        InputFieldsPanel.add(DriversIDTXT);

        PassengerTXT.setMinimumSize(null);
        PassengerTXT.setPreferredSize(null);
        InputFieldsPanel.add(PassengerTXT);

        AmountTXT.setMinimumSize(null);
        AmountTXT.setPreferredSize(null);
        AmountTXT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                AmountTXTKeyTyped(evt);
            }
        });
        InputFieldsPanel.add(AmountTXT);

        OptionalTipTXT.setMinimumSize(null);
        OptionalTipTXT.setPreferredSize(null);
        InputFieldsPanel.add(OptionalTipTXT);

        AccountTXT.setMaximumSize(null);
        AccountTXT.setMinimumSize(null);
        AccountTXT.setPreferredSize(null);
        InputFieldsPanel.add(AccountTXT);

        TelephoneTXT.setMinimumSize(new java.awt.Dimension(0, 24));
        TelephoneTXT.setPreferredSize(new java.awt.Dimension(101, 28));
        InputFieldsPanel.add(TelephoneTXT);

        panel1.setBackground(new java.awt.Color(102, 255, 255));

        Cancel_BTN.setText("Cancel");
        Cancel_BTN.setToolTipText("Unselect/Reset");
        Cancel_BTN.setFocusable(false);
        Cancel_BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cancel_BTNActionPerformed(evt);
            }
        });

        load_BTN.setText("Load");
        load_BTN.setFocusable(false);
        load_BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                load_BTNActionPerformed(evt);
            }
        });

        Insert_BTN.setText("Insert");
        Insert_BTN.setToolTipText("Insert Data");
        Insert_BTN.setAlignmentY(0.0F);
        Insert_BTN.setFocusable(false);
        Insert_BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Insert_BTNActionPerformed(evt);
            }
        });

        Save_BTN.setText("Save");
        Save_BTN.setToolTipText("Save/Update");
        Save_BTN.setAlignmentY(0.0F);
        Save_BTN.setFocusable(false);
        Save_BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Save_BTNActionPerformed(evt);
            }
        });

        ExportBTN.setText("Export");
        ExportBTN.setToolTipText("Export");
        ExportBTN.setFocusable(false);
        ExportBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExportBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(load_BTN, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Insert_BTN, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Save_BTN, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Cancel_BTN, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ExportBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addComponent(load_BTN, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(Insert_BTN, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(Save_BTN, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(Cancel_BTN, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ExportBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        MainTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Time", "Pick Up Point", "Destination", "Driver's ID", "Passenger Name", "Amount", "Optional Tip", "Account", "Telephone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        MainTable.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 12)); //Changing Header Font
        MainTable.getTableHeader().setOpaque(false);
        MainTable.getTableHeader().setBackground(new Color(68, 253, 159));
        MainTable.getTableHeader().setForeground(new Color(0, 0, 0));
        MainTable.setDoubleBuffered(true);
        MainTable.setRowHeight(25);
        MainTable.setShowGrid(true);
        MainTable.getTableHeader().setReorderingAllowed(false);
        MainTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MainTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(MainTable);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        totalamountTXT.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        totalamountTXT.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        totalamountTXT.setText("£0.00");
        totalamountTXT.setToolTipText("");
        totalamountTXT.setAlignmentX(0.5F);
        totalamountTXT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        totalamountTXT.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(totalamountTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 0, 80, 30));

        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel12.setText("Total Payment per day");
        jLabel12.setToolTipText("");
        jLabel12.setAlignmentX(0.5F);
        jLabel12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel12.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 170, 30));

        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel13.setText("Total jobs/day");
        jLabel13.setToolTipText("");
        jLabel13.setAlignmentX(0.5F);
        jLabel13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel13.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 170, 30));

        TotalJobsTXT.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        TotalJobsTXT.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        TotalJobsTXT.setText("0");
        TotalJobsTXT.setToolTipText("");
        TotalJobsTXT.setAlignmentX(0.5F);
        TotalJobsTXT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        TotalJobsTXT.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(TotalJobsTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, 80, 30));

        TotalExpectedText.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        TotalExpectedText.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        TotalExpectedText.setText("£0.00");
        TotalExpectedText.setToolTipText("");
        TotalExpectedText.setAlignmentX(0.5F);
        TotalExpectedText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        TotalExpectedText.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(TotalExpectedText, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, 80, 30));

        jLabel16.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel16.setText("Expected percent/day");
        jLabel16.setToolTipText("");
        jLabel16.setAlignmentX(0.5F);
        jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel16.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 170, 30));

        jLabel17.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel17.setText("Driver");
        jLabel17.setToolTipText("");
        jLabel17.setAlignmentX(0.5F);
        jLabel17.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel17.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 63, 20));

        jLabel19.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel19.setText("Jobs done");
        jLabel19.setToolTipText("");
        jLabel19.setAlignmentX(0.5F);
        jLabel19.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel19.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(186, 110, 63, 20));

        jLabel20.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel20.setText("Takings");
        jLabel20.setToolTipText("");
        jLabel20.setAlignmentX(0.5F);
        jLabel20.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel20.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 110, 63, 20));

        jLabel21.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel21.setText("%");
        jLabel21.setToolTipText("");
        jLabel21.setAlignmentX(0.5F);
        jLabel21.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel21.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 110, 63, 20));

        SecondTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Driver", "Takings", "%", "Jobs done"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Float.class, java.lang.Double.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        SecondTable.setGridColor(new java.awt.Color(0, 0, 0));
        SecondTable.setInheritsPopupMenu(true);
        SecondTable.getTableHeader().setResizingAllowed(false);
        SecondTable.getTableHeader().setReorderingAllowed(false);
        SecondTable.setTableHeader(null);
        jScrollPane2.setViewportView(SecondTable);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 250, 260));

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel2Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 661, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout ContainerPanelLayout = new javax.swing.GroupLayout(ContainerPanel);
        ContainerPanel.setLayout(ContainerPanelLayout);
        ContainerPanelLayout.setHorizontalGroup(
            ContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContainerPanelLayout.createSequentialGroup()
                .addGroup(ContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ContainerPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(panel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(LabelsContainerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(InputFieldsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(1, 1, 1)
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        ContainerPanelLayout.setVerticalGroup(
            ContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContainerPanelLayout.createSequentialGroup()
                .addComponent(LabelsContainerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(InputFieldsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(panel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ContainerPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ContainerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        ContainerPanel.getAccessibleContext().setAccessibleName("ContainerPanel");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Insert_BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Insert_BTNActionPerformed
        DefaultTableModel table = (DefaultTableModel) MainTable.getModel(); //Getting Maintable Model.
        table.addRow(Functionalities.inserting(new JSpinner.DateEditor(jSpinner1, "hh:mm").getFormat().format(jSpinner1.getValue()),
                PickupTXT.getText(), DestinationTXT.getText(),
                DriversIDTXT.getText(), PassengerTXT.getText(), AmountTXT.getText(), OptionalTipTXT.getText(),
                AccountTXT.getText(), TelephoneTXT.getText()));

        DefaultTableModel Model = (DefaultTableModel) SecondTable.getModel(); //Getting Second Table Model.
        SecondTable.setModel(Functionalities.SecondInserting(Integer.valueOf(DriversIDTXT.getText().toString()),
                Float.valueOf(AmountTXT.getText()), Model));

        Functionalities.TotalCount(totalamountTXT, TotalJobsTXT, TotalExpectedText, (DefaultTableModel) SecondTable.getModel());

    }//GEN-LAST:event_Insert_BTNActionPerformed

    private void DriversIDTXTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DriversIDTXTKeyTyped
        char c = evt.getKeyChar();

        if (!(Character.isDigit(c))) {
            evt.consume();
        }

    }//GEN-LAST:event_DriversIDTXTKeyTyped

    private void AmountTXTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AmountTXTKeyTyped
        char c = evt.getKeyChar();

        if (!(Character.isDigit(c) || (c == '.'))) {
            evt.consume();
        }
    }//GEN-LAST:event_AmountTXTKeyTyped

    private void ExportBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExportBTNActionPerformed
// parent component of the dialog
        JFrame parentFrame = new JFrame();

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Specify a csv file to save");

        int userSelection = fileChooser.showSaveDialog(parentFrame);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            if (Functionalities.exportToCSV(MainTable, fileToSave.getAbsolutePath()) == true) {
                JOptionPane.showMessageDialog(null, "Saved to " + fileToSave.getAbsolutePath());

            }
        }

    }//GEN-LAST:event_ExportBTNActionPerformed

    private void load_BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_load_BTNActionPerformed
        String filepath = "";
        // create a File chooser
        JFileChooser fc = new JFileChooser();
        int i = fc.showOpenDialog(this);
        if (i == JFileChooser.APPROVE_OPTION) {
            File f = fc.getSelectedFile();
            filepath = f.getPath(); // Get the File Path

        }
        // Parsing CSV.
        // These are variables.
        String file = filepath;
        BufferedReader reader = null;
        String line = "";
        try {
            reader = new BufferedReader(new FileReader(file));
            while ((line = reader.readLine()) != null) {
                String[] row = line.split(",");
                if (!line.contains("Pick Up Point")) { //Checking if it is Header or not. If it is header then skip.
                    DefaultTableModel table = (DefaultTableModel) MainTable.getModel(); //Getting Maintable Model.
                    table.addRow(row); // Adding into main table
                    DefaultTableModel secondtable = (DefaultTableModel) SecondTable.getModel(); //Getting Maintable Model.
                    Functionalities.SecondInserting(Integer.valueOf(row[3]), Float.valueOf(row[5]), secondtable); //Adding into Second Table
                    Functionalities.TotalCount(totalamountTXT, TotalJobsTXT, TotalExpectedText, (DefaultTableModel) SecondTable.getModel()); //Using SecondTable model so we can sum.

                }

            }
        } catch (IOException | NumberFormatException e) {
            e.printStackTrace();
        } finally {
            try {
                reader.close();
            } catch (IOException ex) {
            }
        }

    }//GEN-LAST:event_load_BTNActionPerformed

    private void Save_BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Save_BTNActionPerformed
        DefaultTableModel table = (DefaultTableModel) MainTable.getModel(); 
        //Ressing the selected Table Row.
        table.setValueAt(new JSpinner.DateEditor(jSpinner1, "hh:mm").getFormat().format(jSpinner1.getValue()), MainTable.getSelectedRow(), 0);
        table.setValueAt(PickupTXT.getText(), MainTable.getSelectedRow(), 1);
        table.setValueAt(DestinationTXT.getText(), MainTable.getSelectedRow(), 2);
        table.setValueAt(DriversIDTXT.getText(), MainTable.getSelectedRow(), 3);
        table.setValueAt(PassengerTXT.getText(), MainTable.getSelectedRow(), 4);
        table.setValueAt(AmountTXT.getText(), MainTable.getSelectedRow(), 5);
        table.setValueAt(OptionalTipTXT.getText(), MainTable.getSelectedRow(), 6);
        table.setValueAt(AccountTXT.getText(), MainTable.getSelectedRow(), 7);
        table.setValueAt(TelephoneTXT.getText(), MainTable.getSelectedRow(), 8);


    }//GEN-LAST:event_Save_BTNActionPerformed

    private void MainTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MainTableMouseClicked
        DefaultTableModel table = (DefaultTableModel) MainTable.getModel(); //Getting Maintable Model.
        //Time Box
        Date def = new Date();    //Initializing a new Date Variable
        SimpleDateFormat formatterDefault = new SimpleDateFormat("HH:mm"); //Setting a date formatter. So we can parse from the Table Time column.
        try {
            def = formatterDefault.parse(table.getValueAt(MainTable.getSelectedRow(), 0).toString()); //Parsing the Time.
        } catch (ParseException ex) {
        }
        jSpinner1.setValue(def); //Setting the Selected Time to Spinner.

        //Others Box
        //First clearing all box.
        PickupTXT.setText("");
        DestinationTXT.setText("");
        DriversIDTXT.setText("");
        PassengerTXT.setText("");
        AmountTXT.setText("");
        OptionalTipTXT.setText("");
        AccountTXT.setText("");
        TelephoneTXT.setText("");
        //Resetting from the selected Table Row.
        PickupTXT.setText(table.getValueAt(MainTable.getSelectedRow(), 1).toString());
        DestinationTXT.setText(table.getValueAt(MainTable.getSelectedRow(), 2).toString());
        DriversIDTXT.setText(table.getValueAt(MainTable.getSelectedRow(), 3).toString());
        PassengerTXT.setText(table.getValueAt(MainTable.getSelectedRow(), 4).toString());
        AmountTXT.setText(table.getValueAt(MainTable.getSelectedRow(), 5).toString());
        OptionalTipTXT.setText(table.getValueAt(MainTable.getSelectedRow(), 6).toString());
        AccountTXT.setText(table.getValueAt(MainTable.getSelectedRow(), 7).toString());
        TelephoneTXT.setText(table.getValueAt(MainTable.getSelectedRow(), 8).toString());
    }//GEN-LAST:event_MainTableMouseClicked

    private void Cancel_BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cancel_BTNActionPerformed
        //Goes for same code. It is retrieving from the table.

        DefaultTableModel table = (DefaultTableModel) MainTable.getModel(); //Getting Maintable Model.
        //Time Box
        Date def = new Date();    //Initializing a new Date Variable
        SimpleDateFormat formatterDefault = new SimpleDateFormat("HH:mm"); //Setting a date formatter. So we can parse from the Table Time column.
        try {
            def = formatterDefault.parse(table.getValueAt(MainTable.getSelectedRow(), 0).toString()); //Parsing the Time.
        } catch (ParseException ex) {
        }
        jSpinner1.setValue(def); //Setting the Selected Time to Spinner.

        //Others Box
        //First clearing all box.
        PickupTXT.setText("");
        DestinationTXT.setText("");
        DriversIDTXT.setText("");
        PassengerTXT.setText("");
        AmountTXT.setText("");
        OptionalTipTXT.setText("");
        AccountTXT.setText("");
        TelephoneTXT.setText("");
        //Resetting from the selected Table Row.
        PickupTXT.setText(table.getValueAt(MainTable.getSelectedRow(), 1).toString());
        DestinationTXT.setText(table.getValueAt(MainTable.getSelectedRow(), 2).toString());
        DriversIDTXT.setText(table.getValueAt(MainTable.getSelectedRow(), 3).toString());
        PassengerTXT.setText(table.getValueAt(MainTable.getSelectedRow(), 4).toString());
        AmountTXT.setText(table.getValueAt(MainTable.getSelectedRow(), 5).toString());
        OptionalTipTXT.setText(table.getValueAt(MainTable.getSelectedRow(), 6).toString());
        AccountTXT.setText(table.getValueAt(MainTable.getSelectedRow(), 7).toString());
        TelephoneTXT.setText(table.getValueAt(MainTable.getSelectedRow(), 8).toString());
    }//GEN-LAST:event_Cancel_BTNActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AccountTXT;
    private javax.swing.JTextField AmountTXT;
    private javax.swing.JButton Cancel_BTN;
    private javax.swing.JPanel ContainerPanel;
    private javax.swing.JTextField DestinationTXT;
    private javax.swing.JTextField DriversIDTXT;
    private javax.swing.JButton ExportBTN;
    private javax.swing.JPanel InputFieldsPanel;
    private javax.swing.JButton Insert_BTN;
    private javax.swing.JPanel LabelsContainerPanel;
    private javax.swing.JTable MainTable;
    private javax.swing.JTextField OptionalTipTXT;
    private javax.swing.JTextField PassengerTXT;
    private javax.swing.JTextField PickupTXT;
    private javax.swing.JButton Save_BTN;
    private javax.swing.JTable SecondTable;
    private javax.swing.JTextField TelephoneTXT;
    private javax.swing.JLabel TotalExpectedText;
    private javax.swing.JLabel TotalJobsTXT;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JLabel lbl_Account;
    private javax.swing.JLabel lbl_Amount;
    private javax.swing.JLabel lbl_Destination;
    private javax.swing.JLabel lbl_DriverId;
    private javax.swing.JLabel lbl_OptTip;
    private javax.swing.JLabel lbl_PassengerName;
    private javax.swing.JLabel lbl_Phone;
    private javax.swing.JLabel lbl_Time;
    private javax.swing.JLabel lbl_pickUpPoint;
    private javax.swing.JButton load_BTN;
    private java.awt.Panel panel1;
    private java.awt.Panel panel2;
    private javax.swing.JLabel totalamountTXT;
    // End of variables declaration//GEN-END:variables
}
